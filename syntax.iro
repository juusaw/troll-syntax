name                   = troll
file_extensions []     = tr;

__IDENTIFIER \= (\b[a-z][a-z0-9]*)

__RESERVED \= (function|call|compositional)

__CONTROL \= (if|then|else|foreach|while|do|until)

styles [] {

  .comment : style {
    color                 = light_green
    italic                = true
    ace_scope             = comment
    textmate_scope        = comment.line
    pygments_scope        = Comment
  }

  .identifier : style {
    color     = cyan
    ace_scope             = constant
    textmate_scope        = variable.other
    pygments_scope        = Name.Variable
  }

  .reserved : style {
    color = pink
    ace_scope             = reserved
    textmate_scope        = keyword.other
    pygments_scope        = Keyword.Reserved

  }
  
 .control : style {
    color = pink
    ace_scope             = control
    textmate_scope        = keyword.control
    pygments_scope        = Keyword.Reserved
  }


  .operator : style {
    color = white
    ace_scope             = operator
    textmate_scope        = keyword.operator
    pygments_scope        = Operator
  }

  .numeric : style {
    color                 = gold
    ace_scope             = constant.numeric
    textmate_scope        = constant.numeric
    pygments_scope        = Number
  }

  .punctuation : style {
    color     = red_2
    ace_scope             = punctuation
    textmate_scope        = punctuation
    pygments_scope        = Punctuation
  }

  .text : style {
    color                 = brown
    ace_scope             = text
    textmate_scope        = string.quoted
    pygments_scope        = String
  }

  .illegal : style {
    color                 = white
    background_color      = red
    ace_scope             = invalid
    textmate_scope        = invalid.illegal
    pygments_scope        = Generic.Error
  }
}

contexts [] {

  main : context {

    : pattern {
      regex          \= $${__RESERVED}
      styles []       = .reserved;
    }

    : pattern {
      regex          \= $${__CONTROL}
      styles []       = .control;
    }


    : pattern {
      regex          \= (\=|\*|\+|\-|:=)
      styles []       = .operator;
    }

    : pattern {
      regex          \= $${__IDENTIFIER}
      styles []       = .identifier;
    }

    : pattern {
      regex          \= (\b\d?[d|D]?\d+)
      styles []       = .numeric;
    }

    : pattern {
      regex          \= (\(|\)|,)
      styles []       = .punctuation;
    }

    : inline_push {
      regex         \= (")
      styles []      = .punctuation;
      default_style  = .text
      : pop {
          regex      \= (")
          styles []   = .punctuation;
      }
    }

    : pattern {
      regex          \= (\\.*)
      styles []       = .comment;
    }

    : pattern {
      regex          \= ([^\s])
      styles []       = .illegal;
    }
  }
}
